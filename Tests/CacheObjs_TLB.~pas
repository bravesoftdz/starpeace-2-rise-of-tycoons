unit CacheObjs_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : 1.2
// File generated on 05/01/2005 12:40:17 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\starpeace\Source\Tests\CacheClient.tlb (1)
// LIBID: {E2AEB740-54E5-11D1-A1A8-141207C10000}
// LCID: 0
// Helpfile: 
// HelpString: CacheObjs Library
// DepndLst: 
//   (1) v1.0 stdole, (C:\WINDOWS\system32\stdole32.tlb)
// Errors:
//   Hint: Parameter 'aPath' of ICacheProxy.SetPath changed to 'aPath_'
//   Hint: Parameter 'Folder' of ICacheProxy.GetFolderIterator changed to 'Folder_'
//   Hint: Parameter 'Name' of ICacheProxy.ContainsFolder changed to 'Name_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
interface

uses Windows, ActiveX, Classes, Graphics, StdVCL, Variants;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  CacheObjsMajorVersion = 1;
  CacheObjsMinorVersion = 0;

  LIBID_CacheObjs: TGUID = '{E2AEB740-54E5-11D1-A1A8-141207C10000}';

  IID_IFolderIterator: TGUID = '{E2AEB743-54E5-11D1-A1A8-141207C10000}';
  CLASS_FolderIteratorAuto: TGUID = '{E2AEB744-54E5-11D1-A1A8-141207C10000}';
  IID_ICacheProxy: TGUID = '{670E4280-54FA-11D1-A1A8-141207C10000}';
  CLASS_CacheProxyAuto: TGUID = '{670E4281-54FA-11D1-A1A8-141207C10000}';
type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IFolderIterator = interface;
  IFolderIteratorDisp = dispinterface;
  ICacheProxy = interface;
  ICacheProxyDisp = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  FolderIteratorAuto = IFolderIterator;
  CacheProxyAuto = ICacheProxy;


// *********************************************************************//
// Interface: IFolderIterator
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E2AEB743-54E5-11D1-A1A8-141207C10000}
// *********************************************************************//
  IFolderIterator = interface(IDispatch)
    ['{E2AEB743-54E5-11D1-A1A8-141207C10000}']
    procedure SetFolder(const aPath: WideString; Options: Integer); safecall;
    procedure Reset; safecall;
    function Next: WordBool; safecall;
    procedure SetOptions(Options: Integer); safecall;
    function Empty: WordBool; safecall;
    function Get_Current: WideString; safecall;
    function Get_FullPath: WideString; safecall;
    property Current: WideString read Get_Current;
    property FullPath: WideString read Get_FullPath;
  end;

// *********************************************************************//
// DispIntf:  IFolderIteratorDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {E2AEB743-54E5-11D1-A1A8-141207C10000}
// *********************************************************************//
  IFolderIteratorDisp = dispinterface
    ['{E2AEB743-54E5-11D1-A1A8-141207C10000}']
    procedure SetFolder(const aPath: WideString; Options: Integer); dispid 1;
    procedure Reset; dispid 2;
    function Next: WordBool; dispid 3;
    procedure SetOptions(Options: Integer); dispid 4;
    function Empty: WordBool; dispid 5;
    property Current: WideString readonly dispid 6;
    property FullPath: WideString readonly dispid 7;
  end;

// *********************************************************************//
// Interface: ICacheProxy
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {670E4280-54FA-11D1-A1A8-141207C10000}
// *********************************************************************//
  ICacheProxy = interface(IDispatch)
    ['{670E4280-54FA-11D1-A1A8-141207C10000}']
    function SetPath(const aPath: WideString): WordBool; safecall;
    function GetPath: WideString; safecall;
    function GetFolderIterator(const Folder: WideString): OleVariant; safecall;
    function ContainsFolder(const Name: WideString): WordBool; safecall;
    procedure Flush; safecall;
    procedure CreateObject(const aPath: WideString); safecall;
    procedure CreateFolder(const Name: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  ICacheProxyDisp
// Flags:     (4432) Hidden Dual OleAutomation Dispatchable
// GUID:      {670E4280-54FA-11D1-A1A8-141207C10000}
// *********************************************************************//
  ICacheProxyDisp = dispinterface
    ['{670E4280-54FA-11D1-A1A8-141207C10000}']
    function SetPath(const aPath: WideString): WordBool; dispid 1;
    function GetPath: WideString; dispid 2;
    function GetFolderIterator(const Folder: WideString): OleVariant; dispid 3;
    function ContainsFolder(const Name: WideString): WordBool; dispid 4;
    procedure Flush; dispid 5;
    procedure CreateObject(const aPath: WideString); dispid 6;
    procedure CreateFolder(const Name: WideString); dispid 7;
  end;

// *********************************************************************//
// The Class CoFolderIteratorAuto provides a Create and CreateRemote method to          
// create instances of the default interface IFolderIterator exposed by              
// the CoClass FolderIteratorAuto. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFolderIteratorAuto = class
    class function Create: IFolderIterator;
    class function CreateRemote(const MachineName: string): IFolderIterator;
  end;

// *********************************************************************//
// The Class CoCacheProxyAuto provides a Create and CreateRemote method to          
// create instances of the default interface ICacheProxy exposed by              
// the CoClass CacheProxyAuto. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCacheProxyAuto = class
    class function Create: ICacheProxy;
    class function CreateRemote(const MachineName: string): ICacheProxy;
  end;

implementation

uses ComObj;

class function CoFolderIteratorAuto.Create: IFolderIterator;
begin
  Result := CreateComObject(CLASS_FolderIteratorAuto) as IFolderIterator;
end;

class function CoFolderIteratorAuto.CreateRemote(const MachineName: string): IFolderIterator;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FolderIteratorAuto) as IFolderIterator;
end;

class function CoCacheProxyAuto.Create: ICacheProxy;
begin
  Result := CreateComObject(CLASS_CacheProxyAuto) as ICacheProxy;
end;

class function CoCacheProxyAuto.CreateRemote(const MachineName: string): ICacheProxy;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CacheProxyAuto) as ICacheProxy;
end;

end.
